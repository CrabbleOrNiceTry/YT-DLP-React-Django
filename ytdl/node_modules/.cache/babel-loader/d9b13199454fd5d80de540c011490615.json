{"ast":null,"code":"var _jsxFileName = \"/home/cbac/Documents/prgTHINGS/YTDL/react-ytdl/ytdl/src/Downloads.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UrlBody = urls => {\n  const rows = urls.url.map((row, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: row.url,\n          download: \"Youtube-Download.mp4\",\n          title: \"Title\",\n          children: row.res\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UrlBody;\nexport default UrlBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"UrlBody\");","map":{"version":3,"sources":["/home/cbac/Documents/prgTHINGS/YTDL/react-ytdl/ytdl/src/Downloads.tsx"],"names":["React","UrlBody","urls","rows","url","map","row","index","res"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;;;AASA,MAAMC,OAAO,GAAIC,IAAD,IAAgB;AAC5B,QAAMC,IAAI,GAAGD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACtC,wBACI;AAAA,6BACI;AAAA,+BAAI;AAAG,UAAA,IAAI,EAAED,GAAG,CAACF,GAAb;AAAkB,UAAA,QAAQ,EAAC,sBAA3B;AAAkD,UAAA,KAAK,EAAC,OAAxD;AAAA,oBAAiEE,GAAG,CAACE;AAArE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAASD,KAAT;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANY,CAAb;AAOA,sBACI;AAAA,cAAQJ;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAXD;;KAAMF,O;AAaN,eAAeA,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nexport interface IUrl {\n    url: {\n        res: string,\n        url: string,\n    }[]\n}\n\nconst UrlBody = (urls: IUrl) => {\n    const rows = urls.url.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td><a href={row.url} download=\"Youtube-Download.mp4\" title=\"Title\">{row.res}</a></td>\n            </tr>\n        )\n    })\n    return (\n        <tbody>{rows}</tbody>\n    )\n};\n\nexport default UrlBody;"]},"metadata":{},"sourceType":"module"}