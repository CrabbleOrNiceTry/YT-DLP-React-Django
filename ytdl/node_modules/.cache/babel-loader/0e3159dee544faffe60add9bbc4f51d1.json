{"ast":null,"code":"var _jsxFileName = \"/home/cbac/Documents/prgTHINGS/YTDL/react-ytdl/ytdl/src/App.tsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './Components/Form/Form';\nimport axios from \"axios\";\nimport Header from './Components/Header/Header';\nimport { API_URL } from '.';\nimport VideoCard from './Components/Form/VideoCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      videos: [],\n      // bestVideo: {\n      //   res: \"\",\n      //   title: \"\",\n      //   url: \"\",\n      // },\n      bestVideo: null,\n      thumbnail_link: \"\",\n      processingStatus: false\n    };\n\n    this.handleSubmit = urlPassed => {\n      axios.post(API_URL, {\n        'url': urlPassed\n      }).then(res => {\n        this.setState({\n          videos: res\n        });\n        const highestResObj = res.data.reduce((prev, curr) => {\n          return parseInt(prev.res, 10) > parseInt(curr.res, 10) ? prev : curr;\n        });\n        this.setState({\n          bestVideo: highestResObj\n        });\n        this.setState({\n          videos: []\n        });\n        console.log(this.state.bestVideo);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          handleSubmit: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), this.state.videos.length !== 0 ? /*#__PURE__*/_jsxDEV(VideoCard, {\n          url: this.state.bestVideo.url,\n          img: this.state.thumbnail_link,\n          title: this.state.bestVideo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 161\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-3\",\n          children: \"To save bandwidth on our side and increase download speeds for our users, the download is routed through Google's server.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"Once converted, click \\\"Go to raw video,\\\" wait to be redirected, and right click the player and select \\\"Save video as...\\\".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        id: \"urlHelp\",\n        className: \"form-text text-muted bottom\",\n        children: [\"We're open source! Check out our \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/CrabbleOrNiceTry/YT-DLP-React-Django\",\n          target: \"blank\",\n          children: \"Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 102\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cbac/Documents/prgTHINGS/YTDL/react-ytdl/ytdl/src/App.tsx"],"names":["React","Component","Form","axios","Header","API_URL","VideoCard","App","state","videos","bestVideo","thumbnail_link","processingStatus","handleSubmit","urlPassed","post","then","res","setState","highestResObj","data","reduce","prev","curr","parseInt","console","log","render","length","url","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,OAAT,QAAwB,GAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAE,EADF;AAEN;AACA;AACA;AACA;AACA;AACAC,MAAAA,SAAS,EAAE,IAPL;AAQNC,MAAAA,cAAc,EAAE,EARV;AASNC,MAAAA,gBAAgB,EAAE;AATZ,KAFkB;;AAAA,SAc1BC,YAd0B,GAcVC,SAAD,IAAuB;AACpCX,MAAAA,KAAK,CAACY,IAAN,CAAWV,OAAX,EAAoB;AAAE,eAAOS;AAAT,OAApB,EAA0CE,IAA1C,CAAgDC,GAAD,IAAS;AACtD,aAAKC,QAAL,CAAc;AAAET,UAAAA,MAAM,EAAEQ;AAAV,SAAd;AACA,cAAME,aAAa,GAAGF,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgB,CAACC,IAAD,EAAYC,IAAZ,KAA0B;AAC9D,iBAAOC,QAAQ,CAACF,IAAI,CAACL,GAAN,EAAW,EAAX,CAAR,GAAyBO,QAAQ,CAACD,IAAI,CAACN,GAAN,EAAW,EAAX,CAAjC,GAAkDK,IAAlD,GAAyDC,IAAhE;AACD,SAFqB,CAAtB;AAGA,aAAKL,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAES;AAAb,SAAd;AACA,aAAKD,QAAL,CAAc;AAAET,UAAAA,MAAM,EAAE;AAAV,SAAd;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWE,SAAvB;AACD,OARD;AASD,KAxByB;AAAA;;AA0B1BiB,EAAAA,MAAM,GAAG;AACP,wBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,YAAY,EAAE,KAAKd;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,EAEI,KAAKL,KAAL,CAAWC,MAAX,CAAkBmB,MAAlB,KAA6B,CAA9B,gBAAmC,QAAC,SAAD;AAAW,UAAA,GAAG,EAAE,KAAKpB,KAAL,CAAWE,SAAX,CAAqBmB,GAArC;AAA0C,UAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWG,cAA1D;AAA0E,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,SAAX,CAAqBoB;AAAtG;AAAA;AAAA;AAAA;AAAA,gBAAnC,gBAAqJ;AAAA;AAAA;AAAA;AAAA,gBAFxJ,eAIE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAcE;AAAO,QAAA,EAAE,EAAC,SAAV;AAAoB,QAAA,SAAS,EAAC,6BAA9B;AAAA,qEAA6F;AAAG,UAAA,IAAI,EAAC,yDAAR;AAAkE,UAAA,MAAM,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAmBD;;AA9CyB;;AAiD5B,eAAevB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Form from './Components/Form/Form';\nimport DisplayVideos, { IVideo } from './Components/Video/Video'\nimport axios from \"axios\";\nimport Header from './Components/Header/Header';\nimport { API_URL } from '.';\nimport VideoCard from './Components/Form/VideoCard';\n\nclass App extends Component {\n\n  state = {\n    videos: [],\n    // bestVideo: {\n    //   res: \"\",\n    //   title: \"\",\n    //   url: \"\",\n    // },\n    bestVideo: null as any,\n    thumbnail_link: \"\",\n    processingStatus: false,\n  };\n\n  handleSubmit = (urlPassed: string) => {\n    axios.post(API_URL, { 'url': urlPassed }).then((res) => {\n      this.setState({ videos: res });\n      const highestResObj = res.data.reduce((prev: any, curr: any) => {\n        return parseInt(prev.res, 10) > parseInt(curr.res, 10) ? prev : curr;\n      });\n      this.setState({ bestVideo: highestResObj });\n      this.setState({ videos: [] });\n      console.log(this.state.bestVideo);\n    });\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <Header />\n        <hr />\n        <div className=\"\">\n          <Form handleSubmit={this.handleSubmit} />\n          {(this.state.videos.length !== 0) ? <VideoCard url={this.state.bestVideo.url} img={this.state.thumbnail_link} title={this.state.bestVideo.title} /> : <div></div>}\n          {/* {(this.state.videos.length !== 0) ? <DisplayVideos vid={this.state.bestVideo} /> : <div></div>} */}\n          <p className=\"mt-3\">\n            To save bandwidth on our side and increase download speeds for our users, the download is routed through Google's server.\n          </p>\n          <p className=\"mt-2\">\n            Once converted, click \"Go to raw video,\" wait to be redirected, and right click the player and select \"Save video as...\".\n          </p>\n        </div>\n        <small id=\"urlHelp\" className=\"form-text text-muted bottom\">We're open source! Check out our <a href=\"https://github.com/CrabbleOrNiceTry/YT-DLP-React-Django\" target=\"blank\">Github</a></small>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}